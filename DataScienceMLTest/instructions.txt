Please verify that the extracted folder contains the following files and directories:
1. instructions.txt (this file)
2. training.csv
3. test.csv
4. training-img (directory)
5. test-img (directory)

Your goal is to train a model on training.csv that will predict values for the variable called "target" on the test data
in test.csv. You will submit a csv file called [last name]-answer.csv which will consist of the data in test.csv with
your predicted target variable for each observation appended as a new column to the right of the test data. Please
call this new column "predicted target". Email your solution file to okarkach@insulet.com.

ML Engineering: In addition to training a ML model, we would like you to develop a small framework of how you will be deploying this model and how a user can use it to make predictions.
You can use any tool you want for deployment and an app with a UI for showcasing how the model can be used on practice.
Please include you code in the email with the results.

This problem is meant to simulate real data situations. The data is generated, as often in real life, by a stochastic
process whose parameters are, in turn, generated by a mix of stochastic processes themselves and so on. You will notice
that the first column in the table is a file name for an image. This is because the target variable depends on the
tabular data *and* the image specified for each row. As in real life, some of the variables you are given in the table
will turn out to be irrelevant. The data you have been given is clean, but the important features have not been
pre-selected for you, nor has the work of feature engineering been done ahead of time for you. This is not simply
a problem of selecting the right algorithm and clicking "go". *You* will have to do the work of feature selection and
feature engineering and only then will you be able to train an adequate model.

As a reminder, the string-valued image column is *not* a feature. Do not put image names into your model! The image
features are the image itself and the image class. You do *not* have to include a predicted image class in your
solution. We only care about the target variable. You *may* predict the image class for the images in the test set if
you find that to be helpful in your model but you do not have to. What we expect you to do is to take the test images
and the test CSV file and produce a model that takes as inputs the specified image for each row and the numerical and/or
categorical features you extract from the row and outputs a single real-valued predicted target for each row.

Once more: THIS IS NOT AN IMAGE CLASSIFICATION PROBLEM! THIS IS NOT SIMPLY A TABULAR DATA PROBLEM!

THE PROBLEM IS MEANT TO BE HARD.

Solely as a point of reference, please be aware that this dataset has a well-defined minimum attainable RMSE. The
asymptotic RMSE for the optimum model for this dataset (if the optimum model predicted on an infinite stream of data
from this process) is approximately 10.0. Google AutoML gets an RMSE of 70,555.85 on the test set. We don't expect you
to get anywhere near 10.0 RMSE in a few hours. But we do expect you to do better than AutoML. YOU ARE HUMAN, after all!

We don't expect you to find a perfect answer. And please, TRY NOT TO SPEND MORE THAN 4 HOURS on this problem. We want to
understand your thought process and see how far you can get on a hard problem you have never seen before in a short
amount of time. We also care about how good you are at communicating your results.

In addition to submitting your predictions, PLEASE SUBMIT a SHORT PowerPoint presentation or PDF file explaining your
process for arriving at your chosen model.

You will be evaluated based on a combination of your final prediction RMSE and your explanation. The problem is hard,
so you may feel that your solution is inadequate. If you find yourself in this situation, DO NOT BE DISCOURAGED!
PLEASE SUBMIT AN ANSWER ANYWAY and make sure to explain the difficulties you encountered with the data in your
presentation. Please also elaborate on how you would continue to tackle the problem if you had more time.

To be honest, we care about your thought process EVEN MORE than we do about RMSE, so, all else equal, a solution with
a presentation that shows a deep understanding of the concepts, attention to detail, and careful consideration of the
data will be considered superior to a submission that attains a marginally higher RMSE but is accompanied by a
presentation that is shallow or that fails to show an intuitive understanding of basic concepts and a creative approach
to the problem.

FEEL FREE to use whatever programming language or software package you want. We don't need to see your code, although
feel free to send it if you want us to look at it. But keep in mind that badly structured unannotated code that is
difficult to read WILL PROBABLY COUNT AGAINST YOU, while there is NO PENALTY FOR *NOT* SUBMITTING CODE. Frankly, we
prefer to read a well put-together presentation than bad code. And we understand that you only have a few hours to work
on this project, so your code may not be the most beautiful. That is why we don't ask for it. We will not refuse to read
code if you do submit it---but if you do submit code, make sure it's beautiful and easy to read!
